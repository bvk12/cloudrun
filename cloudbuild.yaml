steps:
   
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
             'us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}']

  

  - name: 'gcr.io/cloud-builders/gcloud'
    id: Connect to instance
    entrypoint: /bin/sh
    args:
    - '-c'
    - |
      mkdir -p ~/root/.ssh && \\
      gcloud secrets versions access latest --secret=cloud-build-ssh-key > ~/root/.ssh/id_rsa && \\
      chmod 600 ~/root/.ssh/id_rsa && \\
      gcloud secrets versions access latest --secret=cloud-build-ssh-key-pub > ~/root/.ssh/id_rsa.pub && \\
      chmod 600 ~/root/.ssh/id_rsa.pub && \\
      set -x && \\
      gcloud compute ssh gitlab-runner --ssh-key-file=~/root/.ssh/id_rsa --zone=us-central1-a
      gcloud auth configure-docker us-central1-docker.pkg.dev
#      docker run -d -p 80:8080 us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}'
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['auth', 'list']

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "$_SVC_ACC_JSON"  > /tmp/service-account-key.json
        echo "Content of /tmp/service-account-key.json:"
        cat /tmp/service-account-key.json  
        if [ -s /tmp/service-account-key.json ]; then
          gcloud auth activate-service-account --key-file=/tmp/service-account-key.json
        else
          echo "Error: JSON key file is empty."
          
          exit 1
        fi
        

      
      - 'compute'
      - 'ssh'
      - 'gitlab-runner'
      - '--project=${PROJECT_ID}'
      - '--zone=us-central1-a'
      - '--command= docker pull us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA} && docker run -d --name bvk -p 8080:8080 us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}'


  

    


#    args: ['pull', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}']

#  - name: 'gcr.io/cloud-builders/gcloud'
#    args: ['bash', '-c', 'docker run -d --name  -p 80:8080 us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}']

#  - name: 'gcr.io/cloud-builders/gcloud'
#    args: ['compute', 'ssh', 'gitlab-runner', '--project=${PROJECT_ID}', '--zone=us-central1-a', '--command=docker run -d --name bvk -p 80:8080 us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}']
 #   secretEnv: ['DOCKER_AUTH']
#  - name: 'gcr.io/cloud-builders/gcloud'
#    args: ['compute', 'ssh', 'gitlab-runner', '--zone=us-central1-a', '--command', 'docker run -d -p 80:8080 us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}']

      
      
#      gcloud compute instances create-with-container gitlab-runner --zone=us-central1-a --container-image us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}
#      gcloud compute instances update-container gitlab-runner --zone=us-central1-a --container-image us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA} 
#      gcloud compute instances update-container gitlab-runner12 --zone=us-central1-a --container-image us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA} 
#      gcloud compute instances create-with-container gitlab-runner12 --zone=us-central1-a --container-image us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}
      
        
  

  #- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
   # entrypoint: gcloud
   # args: ['run', 'deploy', 'cloudrun-demo', '--image', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cloudrun-art/cloudrun-art:${SHORT_SHA}', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']
